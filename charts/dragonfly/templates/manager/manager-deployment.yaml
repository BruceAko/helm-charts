apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: {{ template "dragonfly.manager.fullname" . }}
    chart: {{ .Chart.Name }}-{{ .Chart.Version }}
    component: "{{ .Values.manager.name }}"
    heritage: {{ .Release.Service }}
    release: {{ .Release.Name }}
  name: {{ template "dragonfly.manager.fullname" . }}
  namespace: {{ template "dragonfly.namespace" . }}
  {{- if .Values.manager.statefulsetAnnotations }}
  annotations:
{{ toYaml .Values.manager.statefulsetAnnotations | indent 4 }}
  {{- end }}
spec:
  replicas: {{ .Values.manager.replicas }}
  selector:
    matchLabels:
      app: {{ template "dragonfly.manager.fullname" . }}
      component: "{{ .Values.manager.name }}"
      release: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app: {{ template "dragonfly.manager.fullname" . }}
        component: "{{ .Values.manager.name }}"
        release: {{ .Release.Name }}
        {{- if .Values.manager.podLabels }}
{{ toYaml .Values.manager.podLabels | indent 8 }}
        {{- end }}
      {{- if .Values.manager.podAnnotations }}
      annotations:
{{ toYaml .Values.manager.podAnnotations | indent 8 }}
      {{- end }}
    spec:
      {{- if .Values.manager.nodeSelector }}
      nodeSelector:
{{ toYaml .Values.manager.nodeSelector | indent 8 }}
      {{- end }}
      {{- if .Values.manager.tolerations }}
      tolerations:
{{ toYaml .Values.manager.tolerations | indent 8 }}
      {{- end }}
      {{- if .Values.manager.affinity }}
      affinity:
{{ toYaml .Values.manager.affinity | indent 8 }}
      {{- end }}
      {{- if quote .Values.manager.terminationGracePeriodSeconds }}
      terminationGracePeriodSeconds: {{ .Values.manager.terminationGracePeriodSeconds }}
      {{- end }}
      {{- if and (.Capabilities.APIVersions.Has "scheduling.k8s.io/v1beta1") (.Values.scheduler.priorityClassName) }}
      priorityClassName: {{ .Values.manager.priorityClassName }}
      {{- end }}
      {{- if .Values.redis.enable }}
      initContainers:
      - name: wait-for-manager
        image: toschneck/wait-for-it:latest
        args:
          - "-t"
          - "0"
          - {{ .Release.Name }}-{{ default "redis-cluster" .Values.redis.fullnameOverride }}:{{ .Values.redis.service.port }}
      {{- end }}
      containers:
      - name: manager
        image: "{{ .Values.manager.image }}:{{ .Values.manager.tag }}"
        imagePullPolicy: {{ .Values.manager.pullPolicy | quote }}
        resources:
{{ toYaml .Values.manager.resources | indent 12 }}
        ports:
        - containerPort: {{ .Values.manager.restPort }}
          protocol: TCP
        - containerPort: {{ .Values.manager.grpcPort }}
          protocol: TCP
        volumeMounts:
        - name: config
          mountPath: "/etc/dragonfly"
        readinessProbe:
          httpGet:
            path: /healthy
            port: {{ .Values.manager.restPort }}
          initialDelaySeconds: 5
          periodSeconds: 10
        livenessProbe:
          httpGet:
            path: /healthy
            port: {{ .Values.manager.restPort }}
          initialDelaySeconds: 15
          periodSeconds: 20
          terminationGracePeriodSeconds: 60
      {{- if .Values.manager.sidecar }}
      - name: {{ .Values.manager.sidecar.name }}
        image: {{ .Values.manager.sidecar.image }}:{{ .Values.manager.sidecar.tag }}
        args:
        {{-  range .Values.manager.sidecar.args }}
        - {{ . }}
        {{- end }}
        command:
        {{-  range .Values.manager.sidecar.command }}
        - {{ . }}
        {{- end }}
        imagePullPolicy: {{ .Values.manager.sidecar.pullPolicy | quote }}
        resources:
{{ toYaml .Values.manager.sidecar.resources | indent 12 }}
      {{- end }}
      volumes:
      - name: config
        configMap:
          name: {{ template "dragonfly.manager.fullname" . }}
          items:
          - key: manager.yaml
            path: manager.yaml
